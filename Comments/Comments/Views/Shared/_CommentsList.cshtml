@using PagedList.Mvc;
@model Comments.Models.CommentsListModel

@if (Model.Comments.Any())
{
    <table class="table">
        @foreach (var item in Model.Comments)
        {
            <tr>
                <td width="55">
                    <img class="img-responsive" width="50" height="50" src="@Url.Content(item.PictureLink)" />
                </td>
                <td>
                    <!--We need this block of code to create a highlighted text after search.-->
                    @if (!String.IsNullOrEmpty(Model.SearchValue))
                    {

                        bool userNameContainsSearchValue = false;
                        string firstUserNamePart = "";
                        string lastUserNamePart = "";
                        if (item.UserName.Contains(Model.SearchValue))
                        {
                            userNameContainsSearchValue = true;
                            firstUserNamePart = item.UserName.Substring(0, item.UserName.IndexOf(Model.SearchValue));
                            lastUserNamePart = item.UserName.Substring(item.UserName.IndexOf(Model.SearchValue) + Model.SearchValue.Length);
                        }

                        bool textContainsSearchValue = false;
                        string firstTextPart = "";
                        string lastTextPart = "";
                        if (item.Text.Contains(Model.SearchValue))
                        {
                            textContainsSearchValue = true;
                            firstTextPart = item.Text.Substring(0, item.Text.IndexOf(Model.SearchValue));
                            lastTextPart = item.Text.Substring(item.Text.IndexOf(Model.SearchValue) + Model.SearchValue.Length);
                        }

                        <div>
                            @if (userNameContainsSearchValue)
                            {
                                <b class="text-danger">@firstUserNamePart<mark class="text-danger">@Model.SearchValue</mark>@lastUserNamePart</b>
}
                            else
                            {
                                <b class="text-danger">@item.UserName</b>
}
                            commented:
                            @if (textContainsSearchValue)
                            {
                                <b class="text-danger">@firstTextPart<mark class="text-danger">@Model.SearchValue</mark>@lastTextPart</b>
}
                            else
                            {
                                <b class="text-danger">@item.Text</b>
}
                        </div>
}
                    else
                    {
                        <div>
                            <b class="text-danger">@item.UserName</b> commented: @Html.DisplayFor(modelItem => item.Text)
                        </div>
}
                    <h6><small>@item.GetPostedTimeString()</small></h6>
                </td>
            </tr>
        }
    </table>

    @Html.PagedListPager(Model.Comments, page => Url.Action("Index", "Paging", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "commentsList" }))
}
else
{
    <div class="text-center">
        <h1>No comments yet</h1>
    </div>
}